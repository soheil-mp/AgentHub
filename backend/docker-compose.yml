version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - agenthub_network

  mongodb:
    container_name: backend-mongodb-1
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db:rw
      - mongodb_config:/data/configdb:rw
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=agenthub
      - MONGODB_USER=agenthub_user
      - MONGODB_PASSWORD=password123
    command: mongod --auth --bind_ip_all
    networks:
      - agenthub_network
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')" mongodb://admin:password123@localhost:27017/admin --quiet
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '0.5'
    ulimits:
      nofile:
        soft: 64000
        hard: 64000

  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_USER=agenthub_user
      - MONGODB_PASSWORD=password123
      - MONGODB_DB_NAME=agenthub
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - agenthub_network

volumes:
  redis_data:
    driver: local
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  agenthub_network:
    name: backend_agenthub_network
    driver: bridge 